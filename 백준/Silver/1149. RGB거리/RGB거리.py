# 순서 조건 잘 맞춰서 풀면 되는데 한 줄 칠했으면 그 값 가지고 다른 줄 칠해야하니까 DP구나!! 할수있음!!


n = int(input())
# 각 집을 칠하는 비용을 입력받아 이차원 리스트에 저장
arr = [list(map(int, input().split())) for _ in range(n)]

# DP 테이블 초기화
# dp[i][j]는 i번째 집을 j색으로 칠할 때의 최소 비용을 나타냄
# rgb 3가지색 N줄만큼
dp = [[0] * 3 for _ in range(n)]

# 첫 번째 집을 칠하는 비용은 입력값과 동일
dp[0] = arr[0]

# 두 번째 집부터 마지막 집까지 반복하여 최소 비용 계산
for i in range(1, n):
    dp[i][0] = min(dp[i-1][1], dp[i-1][2])+ arr[i][0] # 현재 집을 빨간색으로 칠하는 경우
    dp[i][1] = min(dp[i-1][0], dp[i-1][2])+ arr[i][1] # 현재 집을 초록색으로 칠하는 경우
    dp[i][2] = min(dp[i-1][0], dp[i-1][1])+ arr[i][2] # 현재 집을 파란색으로 칠하는 경우

print(min(dp[n-1])) # 마지막 집을 각 색깔로 칠하는 경우의 최소 비용 중 가장 작은 값이 답